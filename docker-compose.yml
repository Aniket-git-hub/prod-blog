services:
    # postgres 16 database
    postgres:
        image: postgres:16
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app_network
        restart: unless-stopped

    # adminer
    adminer:
        image: adminer
        ports:
            - 8080:8080
        networks:
            - app_network

    # backend
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        ports:
            - "5000:5000" # Map container port 3000 to host port 3000
        depends_on:
            - postgres
        volumes:
            - ./backend:/app
            - /app/node_modules # Exclude node_modules from being overwritten by host
        networks:
            - app_network

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "3000:3000" # Map container port 3000 to host port 3001
        volumes:
            - ./frontend:/app
            - /app/node_modules # Exclude node_modules from being overwritten by host
        networks:
            - app_network

    # nginx reverse proxy
    nginx:
        image: nginx:latest
        ports:
            - "80:80"
        restart: unless-stopped
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - frontend
            - backend
        networks:
            - app_network

volumes:
    postgres_data:
        driver: local

networks:
    app_network:
        driver: bridge
